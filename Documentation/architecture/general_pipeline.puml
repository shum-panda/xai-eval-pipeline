@startuml single_pipeline_run
!theme plain
title XAI Pipeline - Einzelner Pipeline Run

participant User
participant Orchestrator
participant DataLoader
participant XAIFactory
participant Explainer as BaseExplainer
participant Evaluator
participant ResultManager
participant SingleRunAnalyse
participant Visualiser
participant MLflow

User -> Orchestrator: run()

Orchestrator -> MLflow: setup MLflow experiment
note right
Configure tracking URI
Create experiment & run
end note

Orchestrator -> Orchestrator: prepare_experiment()
note right
Setup experiment parameters
Log config to MLflow
end note

Orchestrator -> DataLoader: setup_dataloader()
DataLoader --> Orchestrator: DataLoader instance

Orchestrator -> XAIFactory: create_explainer(name, **kwargs)
XAIFactory --> Orchestrator: BaseExplainer instance

Orchestrator -> Orchestrator: run_pipeline(dataloader, explainer)
note right
Process all batches
Generate XAIExplanationResults
end note

Orchestrator -> Evaluator: evaluate_results(results)
Evaluator --> Orchestrator: EvaluationSummary
Orchestrator -> MLflow: log_metrics(summary)

Orchestrator -> ResultManager: save_results(results, summary)
note right of ResultManager
Save JSON, CSV, artifacts
end note
Orchestrator -> MLflow: log_artifacts(csv, summary)

Orchestrator -> SingleRunAnalyse: xai_meta_analyse()
note right of SingleRunAnalyse
Load results CSV
Calculate correlations
Generate threshold analysis
Create comparison plots
end note
SingleRunAnalyse --> Orchestrator: Meta analysis plots & data
Orchestrator -> MLflow: log_artifacts(plots, analysis_csv)

Orchestrator -> Visualiser: visualize_results_if_needed(results, summary)
Visualiser -> Visualiser: create_visualization(result, metrics)
note right of Visualiser
Generate 2x2 grid visualizations:
- Metrics display
- Original image
- Attribution heatmap  
- Overlay with bounding boxes
end note
Visualiser --> Orchestrator: visualization_paths
note right of Visualiser
Save locally:
results/<experiment>/visualizations/
end note
Orchestrator -> MLflow: log_artifacts(visualization_paths)

Orchestrator -> MLflow: end_run()
Orchestrator -> Orchestrator: finalize_run()

Orchestrator --> User: Pipeline completed

@enduml


