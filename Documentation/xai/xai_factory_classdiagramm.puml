@startuml ClassDiagram_XAI_Factory_Core_Architecture
!theme plain
title 1. Klassendiagramm - Core Architecture

package "Registry Pattern" {
    class ExplainerRegistry <<Singleton>> {
        - {static} _instance : ExplainerRegistry
        - _registry : dict<str, type>
        --
        + {static} get_instance() : ExplainerRegistry
        + register(name: str, explainer_class: type) : void
        + get(name: str) : type
        + list_available() : list<str>
    }
}

package "Factory Pattern" {
    class XAIFactory {
        + {static} create(name: str, model: torch.nn.Module, **kwargs) : BaseExplainer
    }
}

package "Explainer Hierarchy" {
    abstract class BaseExplainer {
        # model : torch.nn.Module
        --
        + __init__(model: torch.nn.Module) : void
        + {abstract} explain(images: torch.Tensor | tuple<torch.Tensor>) : torch.Tensor | tuple<torch.Tensor, torch.Tensor, torch.Tensor>
    }

    class GradCAMExplainer {
        - grad_cam : LayerGradCam
        - relu_attributions : bool
        - attribute_to_layer_input : bool
        - interpolate_mode : str
        - additional_forward_args : tuple
        - batch_processor : BatchProcessor
        --
        + __init__(model: torch.nn.Module, batch_processor: BatchProcessor, **kwargs) : void
        + explain(images: torch.Tensor | tuple<torch.Tensor>) : torch.Tensor
        + set_batch_processor(processor: BatchProcessor) : void
        - _compute_gradcam_attributions(images: torch.Tensor) : torch.Tensor
        - _select_target_layer(model: torch.nn.Module, layer_idx: int) : torch.nn.Module
    }

    class IntegratedGradientsExplainer {
        - steps : int
        - baseline : torch.Tensor
        --
        + __init__(model: torch.nn.Module, steps: int, baseline: torch.Tensor, **kwargs) : void
        + explain(images: torch.Tensor | tuple<torch.Tensor>) : torch.Tensor | tuple<torch.Tensor, torch.Tensor, torch.Tensor>
        - _compute_integrated_gradients() : torch.Tensor
        - _interpolate_images() : torch.Tensor
    }

    class GuidedBackpropExplainer {
        - hooks : list
        --
        + __init__(model: torch.nn.Module, **kwargs) : void
        + explain(images: torch.Tensor | tuple<torch.Tensor>) : torch.Tensor | tuple<torch.Tensor, torch.Tensor, torch.Tensor>
        - _register_guided_hooks() : void
        - _guided_relu_hook() : callable
    }
}



' Relationships - Strategy Pattern (KEINE zirkulären Abhängigkeiten)
XAIFactory --> ExplainerRegistry : uses
XAIFactory ..> BaseExplainer : creates

ExplainerRegistry "1" *-- "*" BaseExplainer : registers
BaseExplainer <|-- GradCAMExplainer
BaseExplainer <|-- IntegratedGradientsExplainer
BaseExplainer <|-- GuidedBackpropExplainer


@enduml
