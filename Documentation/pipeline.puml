@startuml state_pipeline_workflow
!theme plain
title XAI Pipeline - Zustandsdiagramm

[*] --> Initialization

state Initialization {
  [*] --> LoadingConfig
  LoadingConfig : Hydra loads YAML config
  LoadingConfig --> ValidatingConfig
  ValidatingConfig : Validate configuration
  ValidatingConfig --> CreatingOrchestrator
  CreatingOrchestrator : Initialize XAIOrchestrator
  CreatingOrchestrator --> [*]
}

Initialization --> ExperimentSetup

state ExperimentSetup {
  [*] --> StartingMLflow
  StartingMLflow : mlflow.start_run()
  StartingMLflow --> LoggingParams
  LoggingParams : Log experiment parameters
  LoggingParams --> LoadingModel
  LoadingModel : Load PyTorch model
  LoadingModel --> CreatingExplainer
  CreatingExplainer : Create XAI explainer
  CreatingExplainer --> PreparingDataset
  PreparingDataset : Setup DataLoader
  PreparingDataset --> [*]
}

ExperimentSetup --> Processing

state Processing {
  [*] --> LoadingBatch

  state LoadingBatch {
    [*] --> ReadingImages
    ReadingImages : Load image batch
    ReadingImages --> ReadingAnnotations
    ReadingAnnotations : Load bounding boxes
    ReadingAnnotations --> ApplyingTransforms
    ApplyingTransforms : Preprocess images
    ApplyingTransforms --> [*]
  }

  LoadingBatch --> PredictingBatch

  state PredictingBatch {
    [*] --> ForwardPass
    ForwardPass : Model inference
    ForwardPass --> ExtractingActivations
    ExtractingActivations : Get intermediate layers
    ExtractingActivations --> [*]
  }

  PredictingBatch --> ExplainingBatch

  state ExplainingBatch {
    [*] --> ComputingAttributions
    ComputingAttributions : Generate explanations
    ComputingAttributions --> NormalizingResults
    NormalizingResults : Normalize heatmaps
    NormalizingResults --> [*]
  }

  ExplainingBatch --> StoringResults
  StoringResults : Create XAIExplanationResult

  StoringResults --> HasMoreBatches
  HasMoreBatches --> LoadingBatch : Yes
  HasMoreBatches --> [*] : No
}

Processing --> Evaluation

state Evaluation {
  [*] --> FilteringResults
  FilteringResults : Select results with bbox

  FilteringResults --> ComputingMetrics

  state ComputingMetrics {
    [*] --> PointingGame
    PointingGame : Max activation in bbox?
    PointingGame --> IoUCalculation
    IoUCalculation : Intersection over Union
    IoUCalculation --> CoverageAnalysis
    CoverageAnalysis : Attribution coverage
    CoverageAnalysis --> PrecisionRecall
    PrecisionRecall : Pixel-wise metrics
    PrecisionRecall --> [*]
  }

  ComputingMetrics --> AggregatingResults
  AggregatingResults : Compute summary statistics
  AggregatingResults --> [*]
}

Evaluation --> Finalization

state Finalization {
  [*] --> SavingResults

  state SavingResults {
    [*] --> SaveJSON
    SaveJSON : Export detailed results
    SaveJSON --> SaveCSV
    SaveCSV : Export summary table
    SaveCSV --> SaveVisualizations
    SaveVisualizations : Save heatmap images
    SaveVisualizations --> [*]
  }

  SavingResults --> LoggingMLflow
  LoggingMLflow : Log metrics & artifacts
  LoggingMLflow --> ClosingRun
  ClosingRun : mlflow.end_run()
  ClosingRun --> [*]
}

Finalization --> [*]

' Error handling
state ErrorHandling {
  [*] --> LoggingError
  LoggingError : Log error details
  LoggingError --> CleanupResources
  CleanupResources : Release GPU memory
  CleanupResources --> FailGracefully
  FailGracefully : Save partial results
  FailGracefully --> [*]
}

' Error transitions
Initialization --> ErrorHandling : ConfigError
ExperimentSetup --> ErrorHandling : ModelLoadError
Processing --> ErrorHandling : RuntimeError
Evaluation --> ErrorHandling : MetricError
Finalization --> ErrorHandling : IOError

ErrorHandling --> [*]

@enduml